


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000                 AREA             Reel, code, READONLY
    3 00000000         
    4 00000000                 export           reel
    5 00000000                 extern           res
    6 00000000         ;extern TabSig
    7 00000000         
    8 00000000         reel    proc
    9 00000000         ;TabSig dans r0 ;valeur de k dans r1 ;adresse de TabCos 
                       dans r2 ;(mettre dans la pile ?)
   10 00000000         ;on verifie si i * k (dans r3 est inférieur à 64) ; il m
                       e faut un registre pour mettre i * k
   11 00000000 46F0            mov              r8, lr      ;sinon ca bloque à 
                                                            la fin et je ne peu
                                                            x pas retourner au 
                                                            main
   12 00000002 F84D 8D04       push             {r8}
   13 00000006 B500            push             {lr}
   14 00000008 F8DF A068       ldr              r10, =res   ; copie l'adresse d
                                                            e res dans r10
   15 0000000C B410            push             {r4}        ;pour le resultat
   16 0000000E         ;b for
   17 0000000E         ;boucle for
   18 0000000E F04F 0300       mov              r3, #0      ;i ; initialisation
                                                             (c'est le premier 
                                                            tour de la boucle)
   19 00000012 B480            push             {r7}
   20 00000014 FB01 F703       mul              r7, r1, r3  ;r1 contient i * k 
                                                            normalement 0 à la 
                                                            premiere itération
   21 00000018 F04F 0400       mov              r4, #0      ;res
   22 0000001C F000 F817       bl               ope
   23 00000020         ;on incremente i
   24 00000020 F103 0301 
                       for     add              r3,#1
   25 00000024         ;on verifie si i < 64
   26 00000024 2B3F            cmp              r3, #63
   27 00000026 DA07            bge              fin
   28 00000028 FB01 F703       mul              r7, r1, r3  ;r1 contient i * k
   29 0000002C 2F40            cmp              r7, #64
   30 0000002E DA1B            bge              modulo      ;si i * k >= 64
   31 00000030         ;donc ici normalement i * k < 64
   32 00000030 B500            push             {lr}
   33 00000032 F000 F80C       bl               ope
   34 00000036 BD00            pop              {PC}
   35 00000038         
   36 00000038 BC80    fin     pop              {r7}
   37 0000003A 4620            mov              r0, r4      ;on recupere le res
                                                             final
   38 0000003C F8CA 4000       str              r4, [r10]   ; stocker la valeur
                                                             de r4 dans res
   39 00000040 BC10            pop              {r4}
   40 00000042 F85D EB04       pop              {lr}
   41 00000046 F85D 8B04       pop              {r8}
   42 0000004A 46C6            mov              lr, r8
   43 0000004C 4770            bx               lr          ;on retourne au mai
                                                            n
   44 0000004E         
   45 0000004E         



ARM Macro Assembler    Page 2 


   46 0000004E         ope
   47 0000004E B420            push             {r5}
   48 00000050         ;ldrsh r5, [r2, r1, lsl #1] ;valeur de cos
   49 00000050 F932 5017       ldrsh            r5, [r2, r7, lsl #1]
   50 00000054 B440            push             {r6}
   51 00000056 F9B0 6000       ldrsh            r6, [r0]    ;valeur du sig
   52 0000005A FB00 F605       mul              r6, r0, r5
   53 0000005E 4434            add              r4, r6
   54 00000060 BC40            pop              {r6}
   55 00000062 BC20            pop              {r5}
   56 00000064 F7FF FFDC       bl               for
   57 00000068         
   58 00000068 F1A7 0740 
                       modulo  sub              r7,#64
   59 0000006C 2F40            cmp              r7,#64
   60 0000006E DAFB            bge              modulo      ;si supérieur on re
                                                            commence
   61 00000070 F7FF FFED       bl               ope         ;si inférieur c'est
                                                             bon on passe à l'o
                                                            peration
   62 00000074         
   63 00000074         
   64 00000074         
   65 00000074                 endp
   66 00000074                 end
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\reel.d -o.\obj\reel.o -I.\RTE\_Simu -I"C:\Users\Nahom Belay\
AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include" -I"C:\Users\Nahom B
elay\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include" --predefi
ne="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSI
ON SETA 529" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --lis
t=reel.lst reel.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reel 00000000

Symbol: Reel
   Definitions
      At line 2 in file reel.s
   Uses
      None
Comment: Reel unused
fin 00000038

Symbol: fin
   Definitions
      At line 36 in file reel.s
   Uses
      At line 27 in file reel.s
Comment: fin used once
for 00000020

Symbol: for
   Definitions
      At line 24 in file reel.s
   Uses
      At line 56 in file reel.s
Comment: for used once
modulo 00000068

Symbol: modulo
   Definitions
      At line 58 in file reel.s
   Uses
      At line 30 in file reel.s
      At line 60 in file reel.s

ope 0000004E

Symbol: ope
   Definitions
      At line 46 in file reel.s
   Uses
      At line 22 in file reel.s
      At line 33 in file reel.s
      At line 61 in file reel.s

reel 00000000

Symbol: reel
   Definitions
      At line 8 in file reel.s
   Uses
      At line 4 in file reel.s
Comment: reel used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

res 00000000

Symbol: res
   Definitions
      At line 5 in file reel.s
   Uses
      At line 14 in file reel.s
Comment: res used once
1 symbol
344 symbols in table
