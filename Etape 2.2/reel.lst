


ARM Macro Assembler    Page 1 


    1 00000000         ;ignorer ce fichier on l'a réecrit plus proprement dans 
                       DFTint
    2 00000000         ;on l'a juste gardé pour avoir une base pour reecrire l'
                       autre
    3 00000000                 thumb
    4 00000000                 AREA             Reel, code, READONLY
    5 00000000         
    6 00000000                 export           reel
    7 00000000                 extern           res
    8 00000000         ;extern TabSig
    9 00000000         
   10 00000000         reel    proc
   11 00000000         ;TabSig dans r0 ;valeur de k dans r1 ;adresse de TabCos 
                       dans r2 ;(mettre dans la pile ?)
   12 00000000         ;on verifie si i * k (dans r3 est inférieur à 64) ; il m
                       e faut un registre pour mettre i * k
   13 00000000 46F0            mov              r8, lr      ;sinon ca bloque à 
                                                            la fin et je ne peu
                                                            x pas retourner au 
                                                            main
   14 00000002 F84D 8D04       push             {r8}
   15 00000006 B500            push             {lr}
   16 00000008 F8DF A064       ldr              r10, =res   ; copie l'adresse d
                                                            e res dans r10
   17 0000000C F84D BD04       push             {r11}       ;pour le resultat
   18 00000010         ;b for
   19 00000010         ;boucle for
   20 00000010 F04F 0300       mov              r3, #0      ;i ; initialisation
                                                             (c'est le premier 
                                                            tour de la boucle)
   21 00000014 B480            push             {r7}
   22 00000016 FB01 F703       mul              r7, r1, r3  ;r1 contient i * k 
                                                            normalement 0 à la 
                                                            premiere itération
   23 0000001A F04F 0B00       mov              r11, #0     ;res
   24 0000001E F000 F813       bl               ope
   25 00000022         ;on incremente i
   26 00000022 F103 0301 
                       for     add              r3,#1
   27 00000026         ;on verifie si i < 64
   28 00000026 2B3F            cmp              r3, #63
   29 00000028 DA05            bge              fin
   30 0000002A FB01 F703       mul              r7, r1, r3  ;r1 contient i * k
   31 0000002E 2F40            cmp              r7, #64
   32 00000030 DA17            bge              modulo      ;si i * k >= 64
   33 00000032         ;donc ici normalement i * k < 64
   34 00000032         ;push {lr}
   35 00000032 F000 F809       bl               ope
   36 00000036         ;pop {PC}
   37 00000036         
   38 00000036 BC80    fin     pop              {r7}
   39 00000038 4658            mov              r0, r11     ;on recupere le res
                                                             final
   40 0000003A F8CA B000       str              r11, [r10]  ; stocker la valeur
                                                             de r4 dans res
   41 0000003E F85D BB04       pop              {r11}
   42 00000042 F85D EB04       pop              {lr}
   43 00000046         ;pop {r8}
   44 00000046         ;mov r4, r1



ARM Macro Assembler    Page 2 


   45 00000046         ;mov lr, r8 ;fonctionne sans cette ligne ce qui devrait 
                       pas etre le cas...
   46 00000046 4770            bx               lr          ;on retourne au mai
                                                            n
   47 00000048         
   48 00000048         
   49 00000048 B420    ope     push             {r5}
   50 0000004A         ;ldrsh r5, [r2, r1, lsl #1] ;valeur de cos
   51 0000004A F932 5017       ldrsh            r5, [r2, r7, lsl #1]
   52 0000004E B440            push             {r6}
   53 00000050 F930 6013       ldrsh            r6, [r0, r3, lsl #1] 
                                                            ;valeur du sig
   54 00000054 FB00 F605       mul              r6, r0, r5
   55 00000058 44B3            add              r11, r6
   56 0000005A BC40            pop              {r6}
   57 0000005C BC20            pop              {r5}
   58 0000005E F7FF FFE0       bl               for
   59 00000062         
   60 00000062 F1A7 0740 
                       modulo  sub              r7,#64
   61 00000066 2F40            cmp              r7,#64
   62 00000068 DAFB            bge              modulo      ;si supérieur on re
                                                            commence
   63 0000006A F7FF FFED       bl               ope         ;si inférieur c'est
                                                             bon on passe à l'o
                                                            peration
   64 0000006E         
   65 0000006E         
   66 0000006E         
   67 0000006E                 endp
   68 0000006E                 end
              00 00 00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\reel.d -o.\obj\reel.o -I.\RTE\_Simu -I"C:\Users\Florian Leon
\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include" -I"C:\Users\Floria
n Leon\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include" --prede
fine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VER
SION SETA 529" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --l
ist=reel.lst src\reel.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reel 00000000

Symbol: Reel
   Definitions
      At line 4 in file src\reel.s
   Uses
      None
Comment: Reel unused
fin 00000036

Symbol: fin
   Definitions
      At line 38 in file src\reel.s
   Uses
      At line 29 in file src\reel.s
Comment: fin used once
for 00000022

Symbol: for
   Definitions
      At line 26 in file src\reel.s
   Uses
      At line 58 in file src\reel.s
Comment: for used once
modulo 00000062

Symbol: modulo
   Definitions
      At line 60 in file src\reel.s
   Uses
      At line 32 in file src\reel.s
      At line 62 in file src\reel.s

ope 00000048

Symbol: ope
   Definitions
      At line 49 in file src\reel.s
   Uses
      At line 24 in file src\reel.s
      At line 35 in file src\reel.s
      At line 63 in file src\reel.s

reel 00000000

Symbol: reel
   Definitions
      At line 10 in file src\reel.s
   Uses
      At line 6 in file src\reel.s
Comment: reel used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

res 00000000

Symbol: res
   Definitions
      At line 7 in file src\reel.s
   Uses
      At line 16 in file src\reel.s
Comment: res used once
1 symbol
344 symbols in table
